from src.config.logging import logger    
from src.generate.llm import LLM  
from typing import Dict


llm = LLM()


def evaluate_factual_correctness(question: str, expected_ans: str, generated_ans: str) -> Dict[str, str]:
    """
    Evaluates the factual correctness of a generated answer compared to the expected answer.

    Args:
        question: Question in focus.
        expected_ans: The ground truth answer.
        generated_ans: The answer generated by the LLM.

    Returns:
        A dictionary containing the classification ("fully correct", "partially correct", or "wrong") and the rationale.
    """

    task = """Given the question, expected and generated answers as shown below, compare the answers and classify them into one of the three classes - `fully correct`, `partially correct`, or `wrong`. 
    If the answer is partially correct or wrong, provide the rationale. 
    The output should be two things - class and rationale as a Python dictionary. 
    For class, it should be one word ONLY (which is the expected class), and for rationale, provide the reason succinctly, especially ONLY focusing on numbers and facts.
    DO NOT focus on the semantics between the expected and predicted answers.
    IMPORANT: Compare only numbers and facts.
    If the units are different, normalize them before comparing. E.g., 1 billion = 1000 million."""

    try:
        response = llm.compare(task, question, expected_ans, generated_ans)
        if not isinstance(response, dict) or "class" not in response or "rationale" not in response:
            raise ValueError("Invalid response format from LLM")

        logger.info("Factual correctness evaluation completed successfully.")
        return response

    except Exception as e:
        logger.exception(f"Error in evaluate_factual_correctness: {e}")
        return {"class": "wrong", "rationale": "Error during evaluation"}


if __name__ == '__main__':
    question = "What was the operating income or loss (in billions) for Google Cloud for Q1 of 2021 compared to the previous year?"
    expected_ans = "In Q1 of 2021, Google Cloud's operating loss was $974 million. In Q1 of 2020, Google Cloud had an operating loss of $1.73 billion."
    generated_ans = """
    Google Cloud's Operating Income/Loss in Q1 2021 vs. 2020

    In Q1 2021, Google Cloud reported an operating loss of **$0.974 billion**, compared to an operating loss of **$1.73 billion** in Q1 2020. This represents a **40% improvement** year-over-year. 

    Here's a breakdown:

    * **Q1 2021:** Operating loss of $0.974 billion
    * **Q1 2020:** Operating loss of $1.73 billion

    While Google Cloud remains unprofitable, the narrowing loss indicates progress towards profitability. 
    """

    response = evaluate_factual_correctness(question, expected_ans, generated_ans)
    predicted_class, rationale = response["class"], response["rationale"]
    logger.info(f'Predicted Class = {predicted_class}')
    logger.info(f'Rationale = {rationale}')

